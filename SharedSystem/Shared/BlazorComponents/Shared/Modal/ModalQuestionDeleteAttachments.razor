<ModalQuestion
    @ref="_modal"
    ModalId="@(ModalId)"
    OnYes="ConfirmDelete"
    OnNo="CancelDelete"
    Color="BootstrapColor.Danger">
    <ChildContent>
        <p>
            @(Resources.Messages.QuestionDeleteAttachments)
        </p>
        <p class="text-danger">
            @(Resources.Messages.ConfirmWarning)
        </p>
    </ChildContent>
</ModalQuestion>

@code {
    private ModalQuestion? _modal;
    
    [Parameter]
    public string ModalId { get; set; } = "modal-confirm-delete-attachments";
    
    [Parameter]
    public EventCallback<string> OnDeleteAttachmentsConfirmed { get; set; }
    
    [Parameter]
    public EventCallback OnDeleteAttachmentsCancelled { get; set; }

    public string? QuestionId { get; set; }
    
    private async Task ConfirmDelete()
    {
        if (string.IsNullOrEmpty(QuestionId) == true)
        {
            throw new NullReferenceException(nameof(QuestionId));
        }
        
        if (OnDeleteAttachmentsConfirmed.HasDelegate)
        {
            await OnDeleteAttachmentsConfirmed.InvokeAsync(QuestionId);
        }
    }

    private async Task CancelDelete()
    {
        if (OnDeleteAttachmentsCancelled.HasDelegate)
        {
            await OnDeleteAttachmentsCancelled.InvokeAsync();
        }
    }

    public async Task ShowAsync(string questionId)
    {
        if (_modal is not null)
        {
            QuestionId = questionId;
            await _modal.ShowAsync();
        }
    }
}