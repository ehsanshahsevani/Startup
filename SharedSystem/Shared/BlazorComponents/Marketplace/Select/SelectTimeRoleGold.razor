@inject RoleGoldService RoleGoldService
@inject RequestResultService RequestResultService

<select
    class="form-select fs-12px"
    @onchange="HandleChange"
    aria-label="Dropdown select"
    id="@(Id)">
    <option value="">@(Placeholder)</option>
    @foreach (var option in List)
    {
        if (SelectedValue == option.ValueId)
        {
            <option value="@option.ValueId" selected>@(option.Value)</option>
        }
        else
        {
            <option value="@option.ValueId">@(option.Value)</option>
        }
    }
</select>

@code {
    [Parameter]
    public string? SelectedValue { get; set; }

    [Parameter]
    public string? Id { get; set; }

    [Parameter]
    public EventCallback<string> SelectedValueChanged { get; set; }

    public List<UiSelectModel> List { get; set; }
    
    [Parameter]
    public string Placeholder { get; set; } = "انتخاب کنید";
    
    [Parameter]
    public bool IsRequired { get; set; } = false;

    [Parameter]
    public EventCallback OnRequiredValidationFailed { get; set; }

    public SelectTimeRoleGold() : base()
    {
        SelectedValue = null;
        List = new List<UiSelectModel>();
    }
    
    protected override async Task OnInitializedAsync()
    {
        if (SelectedValue is not null)
        { 
            await SelectedValueChanged.InvokeAsync(SelectedValue);
        }

        await SetListAsync();
    }

    private async Task HandleChange(ChangeEventArgs e)
    {
        SelectedValue = e.Value?.ToString();

        if (IsRequired == true && string.IsNullOrEmpty(SelectedValue) == true)
        {
            if (OnRequiredValidationFailed.HasDelegate)
            {
                await OnRequiredValidationFailed.InvokeAsync();
            }
        }

        if (SelectedValueChanged.HasDelegate == true)
        {
            await SelectedValueChanged.InvokeAsync(SelectedValue);
        }
    }

    private async Task SetListAsync()
    {
        var result = await RoleGoldService.GetDropDownTimeDataAsync();

        if (result.IsSuccess == true)
        {
            List = result.Value!;
        }
        else
        {
            RequestResultService.AddResult(result);
        }
    }
}